openapi: 3.0.3
info:
  title: JEE Playground - Todo List
  description: OpenAPI for Todo List
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
tags:
  - name: todos
paths:

  /api/todos:
    get:
      summary: List todos
      description: Returns a list of todos
      operationId: listTodos
      tags:
        - todo
      parameters:
        - name: userId
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/Id'
        - name: userUsername
          required: false
          in: query
          schema:
            type: string
        - name: completed
          required: false
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      summary: Create todo
      description: Creates a todo
      operationId: createTodo
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /api/todos/{id}:
    get:
      summary: Get todo
      description: Returns a todo
      operationId: getTodo
      tags:
        - todo
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    put:
      summary: Update todo
      description: Updates a todo
      operationId: updateTodo
      tags:
        - todo
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    delete:
      summary: Delete todo
      description: Deletes a todo
      operationId: deleteTodo
      tags:
        - todo
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: OK

  /api/users:
    get:
      summary: List users
      description: Returns a list of users
      operationId: listUsers
      tags:
        - user
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: username
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create user
      description: Creates a user
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}:
    get:
      summary: Get user
      description: Returns a user
      operationId: getUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update user
      description: Updates a user
      operationId: updateUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete user
      description: Deletes a user
      operationId: deleteUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: OK

  /api/users/{id}/todos:
    get:
      summary: Get user todos
      description: Returns a user todos
      operationId: getUserTodos
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'

components:
  schemas:
    Id:
      type: integer
      format: int64
    Todo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        title:
          type: string
          maxLength: 255
        userId:
          $ref: '#/components/schemas/Id'
        completed:
          type: boolean
          default: false
        createdDate:
          type: string
          format: "date-time"
        completedDate:
          type: string
          format: "date-time"
      required:
        - title
        - userId
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
      required:
        - name
        - username
        - email

  parameters:
    Id:
      name: id
      in: path
      schema:
        $ref: '#/components/schemas/Id'
      required: true
