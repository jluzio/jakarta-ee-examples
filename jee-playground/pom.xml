<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.example.jee</groupId>
	<artifactId>jee-playground</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
		<maven.compiler.release>21</maven.compiler.release>
		<jakartaee-api.version>10.0.0</jakartaee-api.version>
		<wildfly.version>32.0.0.Final</wildfly.version>
		<ee.bom.version>${wildfly.version}</ee.bom.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-war-plugin.version>3.4.0</maven-war-plugin.version>
		<wildfly-maven-plugin.version>5.0.0.Final</wildfly-maven-plugin.version>
		<jboss-logging.version>3.5.3.Final</jboss-logging.version>
		<openapi-generator-maven-plugin.version>7.5.0</openapi-generator-maven-plugin.version>
		<lombok.version>1.18.32</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
		<jackson.version>2.15.4</jackson.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
<!--				<artifactId>wildfly-ee-with-tools</artifactId>-->
				<artifactId>wildfly</artifactId>
<!--				<artifactId>wildfly-jakartaee8-with-tools</artifactId>-->
				<version>${ee.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>${jakartaee-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${org.mapstruct.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>${jboss-logging.version}</version>
<!--			<scope>provided</scope>-->
		</dependency>
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>6.5.0.Final</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${jackson.version}</version>
			<!--      <scope>provided</scope>-->
		</dependency>

	</dependencies>

	<build>
		<finalName>jee-playground</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-todo-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<generatorName>jaxrs-spec</generatorName>
							<inputSpec>${basedir}/src/main/resources/todo-list-api.yaml</inputSpec>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<interfaceOnly>true</interfaceOnly>
								<skipDefaultInterface>true</skipDefaultInterface>
								<useBeanValidation>true</useBeanValidation>
								<useClassLevelBeanValidation>false</useClassLevelBeanValidation>
								<useTags>true</useTags>
								<java8>true</java8>
								<useOptional>false</useOptional>
								<apiPackage>com.example.services.todolist.api.v1</apiPackage>
								<modelPackage>com.example.services.todolist.api.v1.model</modelPackage>
								<useJakartaEe>true</useJakartaEe>
								<generateBuilders>true</generateBuilders>
								<useSwaggerAnnotations>false</useSwaggerAnnotations>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-client-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/openapi/src/gen/java</source>
								<source>${project.build.directory}/generated-sources/annotations</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- Execute 'mvn clean package wildfly:dev' to run the application. -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${wildfly-maven-plugin.version}</version>
				<configuration>
					<!--
						server-config:
							- full profile: standalone-full.xml
					  	- web profile: standalone.xml
					  	- microprofile: standalone-microprofile.xml
					  	- default: standalone.xml
						version:
							- default: latest
					-->
					<debug>true</debug>
					<server-config>standalone-full.xml</server-config>
<!--					<version>${wildfly.version}</version>-->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>setup-datasource</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>${wildfly-maven-plugin.version}</version>
						<configuration>
							<server-config>standalone-full.xml</server-config>
							<version>${wildfly.version}</version>
							<address>subsystem=datasources,data-source=orderManagerDs</address>
							<resources>
								<resource>
									<properties>
										<jndi-name>java:jboss/orderManagerDs</jndi-name>
										<enabled>true</enabled>
										<connection-url>jdbc:postgresql://localhost:5432/ordermanager</connection-url>
										<driver-class>org.postgresql.Driver</driver-class>
										<driver-name>postgresql</driver-name>
										<user-name>ordermanager</user-name>
										<password>changeit</password>
									</properties>
								</resource>
							</resources>
						</configuration>
						<executions>
							<execution>
								<id>deploy-postgresql</id>
								<phase>initialize</phase>
								<goals>
									<goal>deploy-artifact</goal>
								</goals>
								<configuration>
									<groupId>org.postgresql</groupId>
									<artifactId>postgresql</artifactId>
									<name>postgresql</name>
								</configuration>
							</execution>
							<execution>
								<id>add-datasource</id>
								<phase>initialize</phase>
								<goals>
									<goal>add-resource</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>setup-config</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>${wildfly-maven-plugin.version}</version>
						<configuration>
							<server-config>standalone-full.xml</server-config>
							<version>${wildfly.version}</version>
						</configuration>
						<executions>
							<execution>
								<id>setup-configfile</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute-commands</goal>
								</goals>
								<configuration>
									<fail-on-error>false</fail-on-error>
									<commands>
										<command>/subsystem=naming/binding=java\:global\/order-manager-config:remove</command>
										<command>/subsystem=naming/binding=java\:global\/order-manager-config:add(binding-type=simple, type=java.lang.String, value="config/application.yml")</command>
									</commands>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>clean-classes</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.3.2</version>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.outputDirectory}</directory>
								</fileset>
								<fileset>
									<directory>${project.build.testOutputDirectory}</directory>
								</fileset>
								<fileset>
									<directory>${project.build.directory}/generated-sources</directory>
								</fileset>
								<fileset>
									<directory>${project.build.directory}/generated-test-sources</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
